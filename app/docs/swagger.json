{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Good friends API",
    "description": "API for Good friends",
    "contact": {
      "name": "API Support",
      "email": "test@supinfo.com"
    }
  },
  "host": "127.0.0.1:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "Actions on users"
    },
    {
      "name": "Groups",
      "description": "Actions on groups"
    },
    {
      "name": "Group Memberships",
      "description": "Actions on group memberships"
    },
    {
      "name": "Expenses",
      "description": "Actions on group expenses"
    },
    {
      "name": "Refunds",
      "description": "Actions on group refunds"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {},
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/groups": {
      "post": {
        "tags": ["Groups"],
        "description": "Create a new group",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GroupRequestBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/groups/": {
      "get": {
        "tags": ["Groups"],
        "description": "Get groups which the current user has access",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/groups/{id}": {
      "get": {
        "tags": ["Groups"],
        "description": "Get group by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the group"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/groups/memberships": {
      "post": {
        "tags": ["Group Memberships"],
        "description": "Create a new group membership",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GroupMembershipRequestBody"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/users/register": {
      "post": {
        "tags": ["Users"],
        "description": "Register a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserRegisterRequestBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/users/login": {
      "post": {
        "tags": ["Users"],
        "description": "Authenticate user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserLoginRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/users": {
      "get": {
        "tags": ["Users"],
        "description": "Get all users",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/users/me": {
      "get": {
        "tags": ["Users"],
        "description": "Get current user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/users/": {
      "put": {
        "tags": ["Users"],
        "description": "Update current user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserUpdateRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "description": "Delete current user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/expenses/{groupId}": {
      "get": {
        "tags": ["Expenses"],
        "description": "Get all expenses for a specific group",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the group"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v1/expenses": {
      "post": {
        "tags": ["Expenses"],
        "description": "Create a new expense",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ExpenseRequestBody"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/expenses/{id}": {
      "put": {
        "tags": ["Expenses"],
        "description": "Update an expense",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the expense"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ExpenseRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Expenses"],
        "description": "Delete an expense",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the expense"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/refunds/{groupId}": {
      "get": {
        "tags": ["Refunds"],
        "description": "Get refunds for a specific group",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the group"
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "GroupRequestBody": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "My Group"
        },
        "description": {
          "type": "string",
          "example": "A description of my group"
        }
      }
    },
    "GroupMembershipRequestBody": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "example": "609e8e51894f0b0008317211"
        },
        "group_id": {
          "type": "string",
          "example": "609e8e51894f0b0008317222"
        }
      }
    },
    "UserRegisterRequestBody": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "example": "John"
        },
        "lastname": {
          "type": "string",
          "example": "Doe"
        },
        "pseudonym": {
          "type": "string",
          "example": "john_doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "password": {
          "type": "string",
          "example": "newpassword123"
        },
        "confirmPassword": {
          "type": "string",
          "example": "newpassword123"
        }
      }
    },
    "UserLoginRequestBody": {
      "type": "object",
      "properties": {
        "pseudonym": {
          "type": "string",
          "example": "john_doe"
        },
        "password": {
          "type": "string",
          "example": "newpassword123"
        }
      }
    },
    "UserUpdateRequestBody": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "example": "John"
        },
        "lastname": {
          "type": "string",
          "example": "Doe"
        },
        "pseudonym": {
          "type": "string",
          "example": "john_doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "password": {
          "type": "string",
          "example": "newpassword123"
        },
        "confirmPassword": {
          "type": "string",
          "example": "newpassword123"
        }
      }
    },
    "ExpenseRequestBody": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "Dinner"
        },
        "amount": {
          "type": "number",
          "example": 50.0
        },
        "group_id": {
          "type": "string",
          "example": "609e8e51894f0b0008317222"
        },
        "category": {
          "type": "string",
          "example": "Food"
        },
        "refund_recipients": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "609e8e51894f0b0008317211"
          }
        }
      }
    }
  }
}
